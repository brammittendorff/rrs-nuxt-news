name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy-worker:
    name: Deploy Worker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run generate
        env:
          NODE_ENV: production
          NUXT_PUBLIC_PROXY_URL: https://news-worker.news-worker.workers.dev/rss

      - name: Create wrangler.toml for Worker
        run: |
          cat <<EOF > wrangler.toml
          name = "news-worker"
          main = "worker/index.js"
          compatibility_date = "2024-01-01"

          workers_dev = true

          # Default environment (Common for all environments)
          kv_namespaces = [
              { binding = "RSS_CACHE", id = "${{ secrets.RSS_CACHE_KV_ID_DEFAULT }}" }
          ]

          [vars]
          OPENAI_API_KEY = "${{ secrets.OPENAI_API_KEY }}"

          [env.production]
          ENVIRONMENT = "production"
          kv_namespaces = [
              { binding = "RSS_CACHE", id = "${{ secrets.RSS_CACHE_KV_ID_PROD }}" }
          ]
          vars.OPENAI_API_KEY = "${{ secrets.OPENAI_API_KEY }}"
          EOF

      - name: Deploy Worker
        run: npm run deploy:worker
        env:
          NODE_ENV: production
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  deploy-pages:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run generate
        env:
          NODE_ENV: production
          NUXT_PUBLIC_PROXY_URL: https://news-worker.news-worker.workers.dev/rss

      - name: Create wrangler.toml for Pages
        run: |
          cat <<EOF > wrangler.toml
          name = "news-pages"
          compatibility_date = "2024-01-01"

          pages_build_output_dir = ".output/public"

          [vars]
          CLOUDFLARE_ACCOUNT_ID = "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          CLOUDFLARE_API_TOKEN = "${{ secrets.CLOUDFLARE_API_TOKEN }}"

          [env.production]
          ENVIRONMENT = "production"
          vars.CLOUDFLARE_ACCOUNT_ID = "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          vars.CLOUDFLARE_API_TOKEN = "${{ secrets.CLOUDFLARE_API_TOKEN }}"
          EOF

      - name: Deploy to Cloudflare Pages
        run: npm run deploy:pages
        env:
          NODE_ENV: production
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
